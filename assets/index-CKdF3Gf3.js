import{_ as c}from"./_plugin-vue_export-helper-DlAUqK2U.js";import{V as u}from"./VSheet-DIgdsuOS.js";import{V as p}from"./VContainer-D4aNWoOx.js";import{o as n,q as r,v as o,h as s,au as m,n as a,a7 as h,aA as d,z as g}from"./index-BXI-UK9c.js";import"./position-CkpfDU7v.js";const f={};function y(t,i){return r(),n(p,null,{default:o(()=>[s(u,{class:"pa-8"},{default:o(()=>[m(t.$slots,"default")]),_:3})]),_:3})}const v=c(f,[["render",y]]),b={class:"markdown-body"},w=a({__name:"LicenseMD",setup(t,{expose:i}){return i({frontmatter:{},excerpt:void 0}),(l,e)=>(r(),h("div",b,e[0]||(e[0]=[d("<h1>Marzipan License v0.1</h1><blockquote><p>Marzipan is power.<br> It was created to empower individuals, small teams, and the open source community — not to fuel extraction or control by those who already have plenty.<br> This license exists to protect that power from being misused.</p></blockquote><hr><h2>💡 What You Can Do Freely</h2><p>You may use Marzipan for free — including in commercial or closed-source projects — if your use:</p><ul><li>Does <strong>not</strong> involve runtime AST manipulation, introspection, or dynamic runtime modification</li><li>Does <strong>not</strong> use Marzipan’s developer runtime in production systems</li><li>Does <strong>not</strong> grant you or your organization disproportionate power, income, or influence via Marzipan’s introspective capabilities</li></ul><p>You are encouraged to build tools, software, games, servers, personal projects, research, experiments, and anything else — freely.</p><p>Even commercial projects are welcome <strong>as long as</strong> you’re not tapping into Marzipan’s deeper runtime introspection features in ways that cross the line below.</p><hr><h2>🔒 When a Commercial License Is Required</h2><p>A commercial license is required if <strong>any</strong> of the following apply:</p><ul><li>You are using <strong>runtime AST manipulation</strong>, <strong>live introspection</strong>, or <strong>self-modifying behavior</strong></li><li>You are using Marzipan’s <strong>developer runtime</strong> to build tools that adapt themselves dynamically at runtime</li><li>Your use of Marzipan’s runtime features is central to a <strong>commercial</strong>, <strong>influential</strong>, or <strong>high-impact</strong> product or system</li><li>Your users gain significant commercial advantage or influence from software that depends on these capabilities</li></ul><p>You are not required to open source your project.<br> But if you are closed-source <strong>and</strong> gaining revenue, power, or reach from Marzipan’s introspective runtime features, you must obtain a license.</p><p>This includes:</p><ul><li>Systems that react to or analyze their own structure dynamically</li><li>Developer tools that use Marzipan’s introspective ASTs in live environments</li><li>Products that gain strategic advantage through adaptive execution, reactive builds, or meta-programming at runtime</li></ul><blockquote><p>Think of it this way: if you’re using Marzipan for <strong>introspection + influence</strong>, and money or control are involved, a license is required.</p></blockquote><hr><h2>💵 What About Open Source?</h2><p>If your project is <strong>open source and not earning revenue</strong>, you owe nothing.</p><p>If your project is <strong>open source but is earning revenue</strong>, you still need a license — but the terms will be lighter.</p><p>If your users are profiting from what you’ve built — particularly if it’s built on top of Marzipan’s runtime introspection — they may need a license themselves.</p><blockquote><p>Openness doesn’t automatically exempt you from fairness. But it is respected and rewarded.</p></blockquote><hr><h2>🧠 AST Access and Edge Cases</h2><p>Compile-time AST access is free to use.</p><p><strong>Runtime AST inspection</strong> (without modification) is allowed if used for:</p><ul><li>Debugging</li><li>Learning</li><li>Visualizing code</li></ul><p>However, if that inspection is used <strong>to guide runtime behavior or influence outcomes dynamically</strong>, it is considered introspective behavior and may trigger license terms.</p><hr><h2>📆 License Duration and Updates</h2><p>This license is:</p><ul><li><strong>Annual</strong> — renewable each year for commercial users</li><li><strong>Evolving</strong> — terms may change to prevent abuse or close loopholes</li></ul><p>When you use Marzipan’s <strong>developer runtime</strong>, it may fetch the latest license terms and notify you of changes. Changes will be communicated clearly and never applied retroactively without serious cause.</p><blockquote><p>The right to evolve this license is here to protect Marzipan’s mission — not to exploit its users.</p></blockquote><hr><h2>⚖️ Pricing and Terms</h2><p>Commercial license pricing is handled separately.<br> Please refer to the official Marzipan license portal (URL TBD) or contact the project author for current terms and options.</p><hr><h2>🛡️ Ethics &amp; Intended Use</h2><p>Marzipan was created to build systems that are open, reflective, and empowering — not exploitative, coercive, or opaque.</p><p>We ask all users to respect this intention.<br> We do not currently ban any specific domain (e.g. military, surveillance, AGI), but we encourage ethical restraint and transparency.</p><hr><h2>❤️ The Spirit of the License</h2><p>This license isn’t about control — it’s about <strong>fairness</strong>.</p><p>Marzipan is free for the people it’s meant to serve: curious developers, independent toolmakers, open thinkers, and builders of the future.<br> Those who gain disproportionate benefit from its introspective runtime features are simply asked to <strong>give back</strong>.</p><p>That’s the deal.</p><hr><h1>Appendix A: Clarifications on Reflective Use and Licensing Intent</h1><h3>🔍 What Is “Reflective Use”?</h3><p>“Reflective Use” refers to any use of Marzipan that enables a system to inspect, modify, or adapt itself at runtime — particularly in ways that affect its execution behavior.</p><p>This includes, but is not limited to:</p><ul><li>Runtime AST access or mutation</li><li>Partial recompilation or reactive optimization during execution</li><li>Meta-evaluation or dynamic interpretation of program structure</li><li>Self-modifying control flow</li><li>Use of Marzipan’s developer runtime in systems with persistent or evolving state</li><li>Indirect usage through wrappers, plugins, abstractions, or orchestration tools</li></ul><p>If this power is used in a way that generates revenue, strategic control, or influence — a license is required.</p><hr><h3>🚫 Anti-Circumvention Clause</h3><p>You may not:</p><ul><li>Fork, rename, or repackage Marzipan to remove licensing triggers or attribution</li><li>Obscure reflective use behind wrappers or proxies to avoid detection or responsibility</li><li>Use derivative runtimes based on Marzipan for commercial reflective use without obtaining a license</li></ul><p>Attempts to evade licensing in spirit — even if technically allowed — will be treated as a violation.</p><hr><h3>🤖 On AGI and Strategic Systems</h3><p>Projects using Marzipan in the creation or operation of autonomous agents, AGI-style systems, or strategic AI infrastructure <strong>must obtain a commercial license</strong> when:</p><ul><li>They operate outside of academic or nonprofit settings</li><li>They are used in real-world deployment, simulation, or decision-making environments</li><li>They contribute to systems that affect public infrastructure, institutions, markets, or behavior at scale</li></ul><p>Open sourcing such systems does <strong>not</strong> automatically exempt you from licensing if they are used commercially or strategically.</p><hr><h3>⚖️ Intent of This License</h3><p>This license is a statement of <strong>trust and principle</strong>, not just legal restriction.</p><p>If you’re unsure whether your use qualifies for a license, ask. If you’re aligned with Marzipan’s spirit — empowering the many, not extracting for the few — you are already on the right path.</p><p>The goal is not to block innovation or control developers. The goal is to make sure <strong>power used at scale comes with responsibility</strong>.</p>",68)])))}}),x=a({__name:"index",setup(t){return(i,l)=>{const e=v;return r(),n(e,null,{default:o(()=>[s(g(w))]),_:1})}}});export{x as default};
